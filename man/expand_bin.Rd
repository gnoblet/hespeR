% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expand_bin.R
\name{expand_bin}
\alias{expand_bin}
\title{Expand a variable into binary indicators}
\usage{
expand_bin(
  df,
  vars,
  split_by = " ",
  bin_sep = ".",
  drop_undefined = NULL,
  value_in = NULL,
  value_in_suffix = NULL,
  remove_new_bin = TRUE,
  remove_other_bin = TRUE
)
}
\arguments{
\item{df}{(``) The input dataframe.}

\item{vars}{(``) The name of the variables to expand.}

\item{split_by}{(``) The separator used to split the variable into choices (default: " ").}

\item{bin_sep}{(``) The separator used to separate the original variable name and the choice name in the binary columns (default: ".").}

\item{drop_undefined}{(``) A character vector of values to consider as undefined. Defaults to NULL if none.}

\item{value_in}{(``) A character vector of values to consider as value_in. Defaults to NULL if none.}

\item{value_in_suffix}{(``) A character scalar or an empty string to append to the variable names. Defaults to NULL.}

\item{remove_new_bin}{(``) A logical scalar indicating whether to remove the new binary columns if they already exist in the dataframe. Defaults to TRUE.}

\item{remove_other_bin}{(``) A logical scalar indicating whether to remove other binary columns starting with the variable name and the bin_sep. Defaults to TRUE.}
}
\value{
(``) The modified dataframe with as many binary columns as there are choices in the original variable.
}
\description{
This function takes a dataframe and a variable, and expands it into binary indicators.
The variable is split by the \code{split_by} separator, and each choice is represented by a binary column.
The binary columns are separated by the \code{bin_sep} separator.
}
\examples{
df <- data.frame(var1 = c("a b c", "a c", "d", NA), var2 = c("a b c", "a c", "c a", NA))
df <- expand_bin(df, c("var1", "var2"))
df

}
